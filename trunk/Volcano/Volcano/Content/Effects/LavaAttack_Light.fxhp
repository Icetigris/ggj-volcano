/* LavaAttack_Light.fxhp
 * 
 * Design: We slide around the texture on a model,
 *			pulsing it's brightness as well.
 */

#ifndef _PS_LAVAATTACK_LIGHT_FXH_
#define _PS_LAVAATTACK_LIGHT_FXH_

#include "Standard.fxh"
#include "Phong_MultipleLights.fxhv"

#ifndef _VERTOUT_LAVAATTACK_LIGHT_
#define _VERTOUT_LAVAATTACK_LIGHT_
/* data passed from vertex shader to pixel shader */
struct vertOut_LavaAttack_Light{
    float4 posH    : POSITION0;
    float2 tex0    : TEXCOORD0;
    float3 normalW : TEXCOORD1;
    float3 posW    : TEXCOORD2;
    float3 toEye    : TEXCOORD3;
    float3 intensity   : TEXCOORD4;
    float3 lightDir[maxLights]   : TEXCOORD5;
};
#endif //#ifndef _VERTOUT_LAVAATTACK_LIGHT_

float4 LavaAttack_Light_PS(vertOut_MultipleLights IN) : COLOR
{
	float2 texCoord = IN.tex0;
	texCoord.x += cos(gTime) * 50;
	texCoord.y += cos(gTime) * 50;;
	IN.normalW = normalize(IN.normalW);
	//=======================================================
	// Lighting

	float3 ambient = gAmbientMtrl*gAmbientLight;
	float3 toEye = normalize(gEyePosW - IN.posW);
	
	float3 r = float3(0.0f,0.0f,0.0f);
	float t = 0.0f;
	float s = 0.0f;

	float3 spec = float3(0.0f,0.0f,0.0f);
	float4 diffuse = float4(0.0f,0.0f,0.0f,0.0f);
	
	//=======================================================
	// Multiple Lights!
	
	float LightIntensity_multiple[maxLights];
	LightIntensity_multiple[0] = IN.intensity.x;
	LightIntensity_multiple[1] = IN.intensity.y;
	LightIntensity_multiple[2] = IN.intensity.z;
	
	gSpecularMtrl_multiple[0] = gSpecularMtrl_multiple_1;
	gSpecularMtrl_multiple[1] = gSpecularMtrl_multiple_2;
	gSpecularMtrl_multiple[2] = gSpecularMtrl_multiple_3;
	
	gSpecularLight_multiple[0] = gSpecularLight_multiple_1;
	gSpecularLight_multiple[1] = gSpecularLight_multiple_2;
	gSpecularLight_multiple[2] = gSpecularLight_multiple_3;
	
	gDiffuseMtrl_multiple[0] = gDiffuseMtrl_multiple_1;
	gDiffuseMtrl_multiple[1] = gDiffuseMtrl_multiple_2;
	gDiffuseMtrl_multiple[2] = gDiffuseMtrl_multiple_3;
	
	gDiffuseLight_multiple[0] = gDiffuseLight_multiple_1;
	gDiffuseLight_multiple[1] = gDiffuseLight_multiple_2;
	gDiffuseLight_multiple[2] = gDiffuseLight_multiple_3;
	
	for(int v = 0; v < maxLights; v++)
	{
		r = reflect(-IN.lightDir[v], IN.normalW);
		t  = pow(max(dot(r, toEye), 0.0f), gSpecularPower);
		spec += t*(gSpecularMtrl_multiple[v]*gSpecularLight_multiple[v]).rgb*LightIntensity_multiple[v];
		
		s = max(dot(IN.lightDir[v], IN.normalW), 0.0f);
		diffuse += s*(gDiffuseMtrl_multiple[v]+gDiffuseLight_multiple[v])*LightIntensity_multiple[v];
	}

	//=======================================================
	float4 texColor = tex2D(TexS,texCoord * 0.01f);
	
	float min = 0.35f;
	
	diffuse.r = clamp(diffuse.r,min,1.0f);
	diffuse.g = clamp(diffuse.g,min,1.0f);
	diffuse.b = clamp(diffuse.b,min,1.0f);
	
	float4 diffuseTex = diffuse * texColor;
	
	return float4(diffuseTex.rgb + ambient + spec, texColor.a);
}

#endif //#ifndef _PS_LAVAATTACK_LIGHT_FXH_